Git Branching, Merging and Rebasing
===================================

Scenario#1 --> 1 extra commit on Bug123 branch and no extra commit on master branch
----------
Implementation -->
> git branch Bug123
> git checkout Bug123
> git commit -am "add()"

Merging -->
> git checkout master
> git merge Bug123 --> merged changes from Bug123 to master branch


Scenario#2 --> 1 extra commit on Bug456 branch and 1 extra commit on master branch (WITHOUT conflict) parallel structure
----------
Implementation -->
> git branch Bug456
> git commit -am "subtract()" --> this will be part of master branch
> git checkout/switch Bug456
> git commit -am "multiply()" --> this will be part of Bug456 branch

Merging/Rebasing -->
> git rebase master --> perform this command only for rebasing
> git checkout master
> git merge Bug456 --> merged changes from Bug456 to master branch



Scenario#3 --> 1 extra commit on Bug789 branch and 1 extra commit on master branch (WITH conflict) parallel structure
----------
Implementation -->
> git branch Bug789
> git commit -am "divide()" --> this will be part of master branch
> git checkout/switch Bug789
> git commit -am "divide()" --> this will be part of Bug789 branch

Merging/Rebasing -->
> git rebase master --> face conflict situation
	1. manually resolve conflict
	2. git add math.py
	3. git rebase --continue
> git checkout master
> git merge Bug789 --> merged changes from Bug789 to master branch --> resolve conflict only in case of simple merge



git pull --> git fetch + git merge/rebase


Git + GitHub
-------------
1. Created remote repo on GitHub
2. Cloned this remote repo from GitHub to local machine using 'git clone'
3. Added math.py file from GitHub and executed 'git pull' on local machine
4. Modified math.py file locally, committed and then executed 'git push'.
5. Created local branch, modified math.py file locally and executed 'git push origin <branchname>'
6. Create branch on GitHub and start tracking this branch locally using 'git checkout -b <localbranchname> origin/<remotebranchname>'
7. 1 extra commit on origin/main branch and 1 extra commit on local main branch and merge them using rebasing.
> git fetch origin --> only updates local repo and not WD
> git rebase origin/main --> here local main got updated
> git push origin --> here remote main got updated